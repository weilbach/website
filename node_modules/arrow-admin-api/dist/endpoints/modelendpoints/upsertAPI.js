'use strict';

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

module.exports = function (flowName, operationId, schemaId, model) {
	return {
		swagger: '2.0',
		info: {
			title: '' + model.name,
			version: '1.0.0'
		},
		paths: _defineProperty({}, '/' + model.name.replace(/^.*?\//, '').toLowerCase() + '/upsert', {
			post: {
				operationId: '' + operationId,
				tags: ['' + model.name],
				description: 'Create or update a ' + model.name,
				consumes: ['application/json'],
				produces: ['application/json'],
				parameters: [{
					name: 'data',
					in: 'body',
					description: 'Upsert body',
					schema: {
						allOf: [{
							type: 'object',
							properties: {
								id: {
									type: 'string',
									description: 'The ' + model.name + ' ID'
								}
							}
						}, {
							$ref: schemaId
						}]
					}
				}],
				responses: {
					201: {
						description: 'The upsert succeeded, and resulted in an insert.',
						headers: {
							Location: {
								description: 'The URL to the newly created instance.',
								type: 'string'
							}
						}
					},
					204: {
						description: 'The upsert succeeded, and resulted in an update.'
					},
					400: {
						description: 'Bad request.'
					},
					401: {
						description: 'This request requires user authentication, as configured by the server.'
					},
					404: {
						description: 'No results were found.'
					},
					500: {
						description: 'Something went wrong during the request; check out the logs on your server.'
					}
				}
			}
		})
	};
};