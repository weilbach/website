'use strict';

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var _require = require('../../util'),
    arrowQueryOptions = _require.arrowQueryOptions;

module.exports = function (flowName, operationId, schemaId, model) {
	return {
		swagger: '2.0',
		info: {
			title: '' + model.name,
			version: '1.0.0'
		},
		paths: _defineProperty({}, '/' + model.name.replace(/^.*?\//, '').toLowerCase() + '/count', {
			get: {
				operationId: '' + operationId,
				tags: ['' + model.name],
				description: 'Count a ' + model.name,
				consumes: ['application/json'],
				produces: ['application/json'],
				parameters: [].concat(_toConsumableArray(arrowQueryOptions)),
				responses: {
					200: {
						description: 'The count succeeded, and the results are available.',
						schema: {
							type: 'integer'
						}
					},
					400: {
						description: 'Bad request.'
					},
					401: {
						description: 'This request requires user authentication, as configured by the server.'
					},
					404: {
						description: 'No results were found.'
					},
					500: {
						description: 'Something went wrong during the request; check out the logs on your server.'
					}
				}
			}
		})
	};
};