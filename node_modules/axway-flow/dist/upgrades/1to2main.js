'use strict';

var FlowManager = require('../flowmanager');

module.exports = {
	id: 'main1to2',
	stage: 'main',
	type: 'flow',
	from: '1',
	to: '2',
	owner: 'API Builder',
	fn: function fn(flow) {
		return new Promise(function (resolve) {
			var _iteratorNormalCompletion = true;
			var _didIteratorError = false;
			var _iteratorError = undefined;

			try {
				for (var _iterator = Object.keys(flow.nodes)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
					var id = _step.value;

					var node = flow.nodes[id];
					// upgrade the node type to use a URI in version 2
					if (node.type === 'parametermap' || node.type === 'delay' || node.type === 'switch') {
						node.type = FlowManager.formatNodeHandlerUri('axway-flow', node.type);
					}
					// nodes now have names.  if no name assigned, set it as the id
					if (!node.name) {
						node.name = id;
					}
				}
			} catch (err) {
				_didIteratorError = true;
				_iteratorError = err;
			} finally {
				try {
					if (!_iteratorNormalCompletion && _iterator.return) {
						_iterator.return();
					}
				} finally {
					if (_didIteratorError) {
						throw _iteratorError;
					}
				}
			}

			return resolve(flow);
		});
	}
};