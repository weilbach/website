{
	"$schema": "http://json-schema.org/draft-06/schema#",
	"id": "http://axway.com/schemas/flowschema.json",
	"title": "Flow Schema",
	"description": "The schema for a Flow definition.",
	"type": "object",
	"definitions": {
		"node": {
			"description": "The node instances.",
			"type": "object",
			"additionalProperties": false,
			"properties": {
				"name": {
					"description": "The display name of the node",
					"type": "string"
				},
				"type": {
					"description": "The node type identifier.",
					"type": "string"
				},
				"method": {
					"type": "string",
					"description": "Node specific method name if the method supports multiple functions."
				},
				"parameters": {
					"$ref": "#/definitions/parameters"
				},
				"outputs": {
					"additionalProperties": {
						"$ref": "#/definitions/output-node"
					}
				}
			},
			"required": [
				"type",
				"name",
				"method",
				"parameters",
				"outputs"
			]
		},
		"parameters": {
			"description": "The list of input parameters for this node.",
			"type": "array",
			"uniqueItems": true,
			"items": {
				"$ref": "#/definitions/parameter"
			}
		},
		"parameter": {
			"description": "The details of an input parameter.",
			"type": "object",
			"additionalProperties": false,
			"properties": {
				"name": {
					"description": "The name of the parameter.",
					"type": "string"
				},
				"value": {
					"description": "A stringified value representing the specified type.",
					"type": "string"
				},
				"type": {
					"type": "string",
					"description": "The type of `value` (defaults to 'jsonpath').",
					"default": "jsonpath",
					"enum": [
						"jsonpath",
						"boolean",
						"number",
						"string",
						"object",
						"array",
						"null"
					]
				}
			},
			"anyOf": [
				{
					"required": [
						"name",
						"value"
					]
				},
				{
					"required": [
						"name",
						"value",
						"type"
					]
				}
			]
		},
		"output-node": {
			"description": "Detail for handling the output of the flow node.",
			"type": "object",
			"properties": {
				"context": {
					"oneOf": [
						{
							"type": "string"
						},
						{
							"type": "null"
						}
					]
				},
				"routes": {
					"$ref": "#/definitions/routes"
				}
			},
			"additionalProperties": false
		},
		"output-spec": {
			"id": "#/output-spec",
			"description": "Detail for handling the output of the nodehandler node.",
			"type": "object",
			"properties": {
				"name": {
					"$ref": "#/definitions/stringIntl",
					"description": "The name of the output."
				},
				"description": {
					"$ref": "#/definitions/stringIntl",
					"description": "A description of the output."
				},
				"context": {
					"oneOf": [
						{
							"type": "string"
						},
						{
							"type": "null"
						}
					]
				},
				"schema": {
					"$ref": "http://json-schema.org/draft-06/schema#"
				}
			},
			"additionalProperties": false
		},
		"routes": {
			"description": "The array of IDs of the node(s) to be executed next. Can be null for terminal nodes.",
			"oneOf": [
				{
					"type": "array",
					"uniqueItems": true,
					"items": {
						"type": "string"
					}
				},
				{
					"type": "string"
				},
				{
					"type": "null"
				}
			]
		},
		"stringIntl": {
			"oneOf": [
				{
					"type": "string"
				},
				{
					"type": "object",
					"patternProperties": {
						"^[a-z][a-z]$": {
							"type": "string"
						},
						"^[a-z][a-z]_[A-Z][A-Z]$": {
							"type": "string"
						}
					}
				}
			]
		},
		"method": {
			"type": "object",
			"properties": {
				"name": {
					"$ref": "#/definitions/stringIntl",
					"description": "The name of the node handler method as it would appear in the UI (supports internationalization)."
				},
				"description": {
					"$ref": "#/definitions/stringIntl",
					"description": "A brief description of the parameter (supports internationalization)."
				},
				"parameter": {
					"type": "object",
					"properties": {
						"type": {
							"type": "string",
							"enum": [
								"object"
							]
						},
						"properties": {
							"type": "object",
							"additionalProperties": {
								"$ref": "http://json-schema.org/draft-06/schema#"
							}
						},
						"required": {
							"type": "array",
							"uniqueItems": true,
							"items": {
								"type": "string"
							}
						},
						"additionalProperties": {
							"type": "boolean",
							"enum": [
								false
							]
						}
					},
					"required": [
						"properties",
						"additionalProperties"
					],
					"description": "An object that describes a set of parameter inputs into the node handler.",
					"additionalProperties": false
				},
				"outputs": {
					"additionalProperties": {
						"$ref": "#/definitions/output-spec"
					}
				}
			},
			"required": [
				"description",
				"parameter",
				"outputs"
			]
		},
		"dataImageURI": {
			"type": "string",
			"pattern": "^data:image/(?:bmp|jpeg|png|gif|tiff|svg\\+xml);base64,.*"
		},
		"icon": {
			"oneOf": [
				{
					"type": "string",
					"pattern": "^(?!data:image).*"
				},
				{
					"$ref": "#/definitions/dataImageURI"
				}
			],
			"default": "heart-o"
		},
		"flow": {
			"id": "#/flow-schema",
			"type": "object",
			"additionalProperties": false,
			"properties": {
				"name": {
					"description": "The name of the flow. If this isn't specified the filename will be used",
					"type": "string"
				},
				"schemaVersion": {
					"description": "The flow schema version.",
					"type": "string",
					"enum": [
						"1",
						"2"
					]
				},
				"start": {
					"description": "The ID of the first node to be executed.",
					"type": "string"
				},
				"nodes": {
					"description": "The instances of nodes used by the flow.",
					"type": "object",
					"additionalProperties": {
						"$ref": "#/definitions/node"
					}
				}
			},
			"required": [
				"name",
				"schemaVersion",
				"nodes",
				"start"
			]
		},
		"nodehandler": {
			"id": "#/node-handler-schema",
			"type": "object",
			"additionalProperties": false,
			"properties": {
				"schemaVersion": {
					"description": "The flow node handler schema version.",
					"type": "string",
					"enum": [
						"1"
					]
				},
				"name": {
					"$ref": "#/definitions/stringIntl",
					"description": "The name of the node handler as it would appear in the UI (supports internationalization)."
				},
				"description": {
					"$ref": "#/definitions/stringIntl",
					"description": "A description of the node handler and what it does (supports internationalization)."
				},
				"icon": {
					"description": "An icon for the node handler.  Supports image data URI scheme, fontawesome icon names, or reference to file.",
					"$ref": "#/definitions/icon"
				},
				"type": {
					"type": "string",
					"description": "An type identifier that uniquely identifies the type of node and is used in the flow when referring to this node handler."
				},
				"category": {
					"$ref": "#/definitions/stringIntl",
					"description": "The category group under which the node handler will appear."
				},
				"methods": {
					"type": "object",
					"additionalProperties": {
						"$ref": "#/definitions/method"
					}
				},
				"deprecated": {
					"description": "Indicates that this node handler is no longer supported and may be removed in the future.",
					"oneOf": [
						{
							"type": "boolean",
							"description": "A flag to indicate the node handler has been deprecated."
						},
						{
							"$ref": "#/definitions/stringIntl",
							"description": "Indicates the node handler has been deprecated and a descriptive message."
						}
					]
				}
			},
			"required": [
				"schemaVersion",
				"name",
				"type",
				"category",
				"methods"
			]
		}
	}
}
