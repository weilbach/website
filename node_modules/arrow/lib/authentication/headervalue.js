/**
 * This code is closed source and Confidential and Proprietary to
 * Appcelerator, Inc. All Rights Reserved.  This code MUST not be
 * modified, copied or otherwise redistributed without express
 * written permission of Appcelerator. This file is licensed as
 * part of the Appcelerator Platform and governed under the terms
 * of the Appcelerator license agreement.
 */

/**
 * this is a auth strategy which will simply look for a value
 * in the header only and if the header value matches what we
 * expect, we let the request proceed, otherwise, we deny it
 */
function HeaderValueAuthStrategy(server) {
	this.config = server.config;
	this.prefix = this.config.apiPrefix;
	if (!/\/$/.test(this.prefix)) {
		this.prefix += '/';
	}
}

HeaderValueAuthStrategy.prototype.matchURL = function (req) {
	// match all requests that are for our apis
	return req.path.toLowerCase().indexOf(this.prefix.toLowerCase()) === 0;
};

HeaderValueAuthStrategy.prototype.validateRequest = function (req) {
	var key = req.headers.apikey;
	return (key === this.config.apikey);
};

HeaderValueAuthStrategy.prototype.applyCredentialsForTest = function (opts) {
	opts.headers.APIKey = this.config.apikey;
};

HeaderValueAuthStrategy.prototype.getSwaggerSecurity = function () {
	return {
		securityDefinitions: {
			apikey: {
				type: 'apiKey',
				name: 'apikey',
				in: 'header',
				description: 'Require authorized access to API'
			}
		},
		security: [{
			apikey: []
		}]
	};
};

module.exports = HeaderValueAuthStrategy;

